substitutions:
  name: frangipool
  friendly_name: FrangiPool
  local_temp_address: '0xC40416C23220FF28'
  temp_address: '0x160121a14aac6f28'

wifi:
  ap:
    ssid: $friendly_name Fallback Hostspot
    password: "12345678"
  
esphome:
  name: frangipool
  friendly_name: FrangiPool
  project:
    name: frangipool.salt_without_ph_without_redox
    version: "0.1.0"

dashboard_import:
  package_import_url: github://frangipool/esphome-config/frangipool_salt_without_ph_without_redox.yaml

esp32:
  board: nodemcu-32s

logger:
  level: INFO

api:

ota:

improv_serial:

esp32_improv:
  authorizer: none

captive_portal:

time:
  - platform: homeassistant
    timezone: Europe/Paris
    id: esptime

dallas:
  - pin: GPIO23
    update_interval: 10s
i2c:
  sda: 21
  scl: 22
  scan: true
  id: bus_a

ads1115:
  - address: 0x48

globals:
  - id: pump_last_turn_on
    type: int
    restore_value: True
  - id: store_pool_temp
    type: float
    restore_value: True
    
interval:
  - interval: 1min
    then:
      - if:
          condition:
            and:
              - switch.is_on: pump
              - lambda: |-
                  if (id(pump_uptime).state >= id(pump_uptime_delay).state){
                    return true;
                  } else {
                    return false;
                  }
          then:
            - globals.set: 
                id: store_pool_temp
                value: !lambda "return id(pipe_temp).state;"

select:
  - platform: template
    name: Mode Filtration
    optimistic: True
    options:
      - Auto
      - On 24h
      - "Off"
      - Hiver
    restore_value: True
    initial_option: Auto
    entity_category: config
    icon: mdi:engine
  
number:
  - platform: template
    name: Consigne Antigel
    id: max_antifreeze_temp
    optimistic: True
    unit_of_measurement: °C
    device_class: temperature
    step: 0.2
    min_value: -2.0
    max_value: 2.0
    restore_value: True
    initial_value: 0.0
    entity_category: config

  - platform: template
    name: Délais Filtration
    id: pump_uptime_delay
    optimistic: True  
    unit_of_measurement: min
    step: 5
    min_value: 5
    max_value: 30
    restore_value: True
    initial_value: 10
    entity_category: config

sensor:
  # Sondes de températures
  - platform: dallas
    address: $local_temp_address
    name: Température Local
    id: local_temp
    accuracy_decimals: 1
    filters:
      - median:
          window_size: 12
          send_every: 6

  - platform: dallas
    address: $temp_address
    name: Température Canalisation
    accuracy_decimals: 1
    id: pipe_temp
    filters:
      - median:
          window_size: 12
          send_every: 6
    on_value_range:
      - below: !lambda return id(min_antifreeze_temp).state;
        then:
          - binary_sensor.template.publish:
              id: antifreeze
              state: ON
          - switch.turn_on: pump
          - homeassistant.service:
              service: persistent_notification.create
              data:
                title: Message from ${friendly_name}
              data_template:
                message: Mode hors-gel actif
      - above: !lambda return id(max_antifreeze_temp).state;
        then:
          - binary_sensor.template.publish:
              id: antifreeze
              state: OFF
          - switch.turn_off: pump
          - homeassistant.service:
              service: persistent_notification.create
              data:
                title: Message from ${friendly_name}
              data_template:
                message: Fin du mode hors-gel

  - platform: template
    name: Température Piscine
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    id: pool_temp
    accuracy_decimals: 1
    lambda: |-
      return id(store_pool_temp);

  - platform: template
    name: Pump Uptime
    id: pump_uptime
    internal: True
    lambda: |-
      if (id(pump).state){
        return id(esptime).now().timestamp - id(pump_last_turn_on);
      } else {
        return 0.0;
      }

  - platform: template
    internal: True
    id: min_antifreeze_temp
    lambda: return id(max_antifreeze_temp).state - 1;
    
  - platform: uptime
    name: Uptime
    unit_of_measurement: s
    entity_category: diagnostic

  - platform: wifi_signal
    name: RSSI
    update_interval: 60s
    entity_category: diagnostic

binary_sensor:
  - platform: template
    name: Antigel
    device_class: cold
    id: antifreeze
    icon: mdi:snowflake-alert
    
  - platform: status
    name: Status
    entity_category: diagnostic

switch:
  - platform: gpio
    pin: GPIO25
    name: Filtration
    id: pump
    restore_mode: RESTORE_DEFAULT_OFF
    icon: mdi:engine
    on_turn_on: 
      then:
        - globals.set: 
            id: pump_last_turn_on
            value: !lambda "return id(esptime).now().timestamp;"


  - platform: gpio
    pin: GPIO27
    name: Electrolyseur
    id: electrolyser
    restore_mode: RESTORE_DEFAULT_ON
    icon: mdi:chemical-weapon

button:

  - platform: restart
    name: Reboot

status_led:
  pin:
    number: GPIO2
    inverted: yes