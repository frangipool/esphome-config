substitutions:
  name: frangipool
  friendly_name: FrangiPool
  pump_uptime_delay: '1800.0'
  max_orp: '740.0'
  min_orp: '710.0'
  local_temp_address: '0xC40416C23220FF28'
  temp_address: '0x160121a14aac6f28'

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:

esphome:
  name: frangipool
  friendly_name: FrangiPool
  project:
    name: frangipool.salt_without_ph
    version: "main"

dashboard_import:
  package_import_url: github://frangipool/esphome-config/esphome/frangipool_salt_without_ph.yaml@main

esp32:
  board: az-delivery-devkit-v4

logger:
  level: INFO

api:
  encryption:
    key: !secret api_encryption_key

ota:
  password: !secret password

captive_portal:

time:
  - platform: homeassistant
    timezone: Europe/Paris
    id: esptime

dallas:
  - pin: GPIO23
    update_interval: 10s

i2c:
  sda: 21
  scl: 22
  scan: true
  id: bus_a

ads1115:
  - address: 0x48

globals:
  - id: pump_last_turn_on
    type: int
    restore_value: True
  - id: store_pool_temp
    type: float
    restore_value: True
  - id: store_pool_orp
    type: float
    restore_value: True
  - id: redox_offset
    type: float
    restore_value: True
    
interval:
  - interval: 1min
    then:
      - if:
          condition:
            and:
              - switch.is_on: pump
              - sensor.in_range:
                  id: pump_uptime
                  above: ${pump_uptime_delay}
          then:
            - globals.set: 
                id: store_pool_temp
                value: !lambda "return id(pipe_temp).state;"
            - globals.set: 
                id: store_pool_orp
                value: !lambda "return id(realtime_orp).state;"
select:
  - platform: template
    name: Mode Filtration
    optimistic: True
    options:
      - Auto
      - On 24h
      - "Off"
      - Hiver
    restore_value: True
    initial_option: Auto

  - platform: template
    name: Mode Surpresseur
    optimistic: True
    options:
      - "Off"
      - Auto
      - Forcé
    restore_value: True
    initial_option: "Off"
  
number:
  - platform: template
    name: Consigne Antigel
    id: max_antifreeze_temp
    optimistic: True  
    step: 0.2
    min_value: -2.0
    max_value: 2.0
    restore_value: True
    initial_value: 0.0

sensor:
  # Sondes de températures
  - platform: dallas
    address: $local_temp_address
    name: "Température local"
    id: local_temp
    accuracy_decimals: 1
    filters:
      - median:
          window_size: 12
          send_every: 6

  - platform: dallas
    address: $temp_address
    name: "Température canalisation"
    accuracy_decimals: 1
    id: pipe_temp
    filters:
      - median:
          window_size: 12
          send_every: 6
    # Gestion de protection en cas de risque de gel, on force la filtration quand la température devient négative dans la canalisation
    on_value_range:
      - below: !lambda return id(min_antifreeze_temp).state;
        then:
          - binary_sensor.template.publish:
              id: antifreeze
              state: ON
          - switch.turn_on: pump
          - homeassistant.service:
              service: persistent_notification.create
              data:
                title: Message from ${friendly_name}
              data_template:
                message: Mode hors-gel activé sur la piscine
      - above: !lambda return id(max_antifreeze_temp).state;
        then:
          - binary_sensor.template.publish:
              id: antifreeze
              state: OFF
          - switch.turn_off: pump
          - homeassistant.service:
              service: persistent_notification.create
              data:
                title: Message from ${friendly_name}
              data_template:
                message: Fin du mode hors-gel sur la piscine

  - platform: template
    name: "Température $friendly_name"
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    id: pool_temp
    accuracy_decimals: 1
    lambda: |-
      return id(store_pool_temp);

  # Durée de fonctionnement de la pompe
  - platform: template
    name: Pump Uptime
    id: pump_uptime
    internal: True
    lambda: |-
      if (id(pump).state){
        return id(esptime).now().timestamp - id(pump_last_turn_on);
      } else {
        return 0.0;
      } 

  # ORP
  - platform: ads1115
    id: ads1115_a0
    internal: true
    multiplexer: 'A0_GND'
    gain: 6.144
    unit_of_measurement: "mV"
    update_interval: 10s
    device_class: "voltage"
    state_class: "measurement"
    filters:
      - multiply: 1000
      - median:
          window_size: 12
          send_every: 6

  - platform: template
    name: "ORP temps réel"
    unit_of_measurement: "mV"
    device_class: "voltage"
    state_class: "measurement"
    icon: mdi:chemical-weapon
    id: realtime_orp
    accuracy_decimals: 1
    lambda: return ((2500-id(ads1115_a0).state)/1,037) + id(redox_offset);

  - platform: template
    name: "ORP"
    unit_of_measurement: "mV"
    device_class: "voltage"
    state_class: "measurement"
    icon: mdi:chemical-weapon
    id: pool_orp
    accuracy_decimals: 1
    lambda: return id(store_pool_orp);
    on_value_range:
      - above: ${max_orp}
        then:
        - switch.turn_off: electrolyser
      - below: ${min_orp}
        then:
        - switch.turn_on: electrolyser

  - platform: template
    name: "Offset Redox"
    lambda: return id(redox_offset);

  
  - platform: template
    internal: True
    id: min_antifreeze_temp
    lambda: return id(max_antifreeze_temp).state - 1;
    
  - platform: uptime
    name: Uptime
    unit_of_measurement: s
    entity_category: diagnostic

  - platform: wifi_signal
    name: RSSI
    update_interval: 60s
    entity_category: diagnostic

binary_sensor:
  # On passe à true si la protection antigel est active
  - platform: template
    name: Antigel
    device_class: cold
    id: antifreeze
    icon: mdi:snowflake-alert
    
  - platform: status
    name: Status
    entity_category: diagnostic

switch:
  - platform: gpio
    pin: GPIO25
    name: "Filtration"
    id: pump
    restore_mode: RESTORE_DEFAULT_OFF
    icon: mdi:engine
    on_turn_on: 
      then:
        - globals.set: 
            id: pump_last_turn_on
            value: !lambda "return id(esptime).now().timestamp;"

  - platform: gpio
    pin: GPIO26
    name: "Surpresseur"
    id: robot
    restore_mode: RESTORE_DEFAULT_OFF
    icon: mdi:robot-mower

  - platform: gpio
    pin: GPIO27
    name: "Electrolyseur"
    id: electrolyser
    restore_mode: RESTORE_DEFAULT_ON
    icon: mdi:chemical-weapon

button:
  - platform: template
    name: "Calibration 225mV"
    on_press:
      then:
        - globals.set: 
            id: redox_offset
            value: !lambda "return 225 - (((2500-id(ads1115_a0).state)/1,037));"

  - platform: template
    name: "Calibration 475mV"
    on_press:
      then:
        - globals.set: 
            id: redox_offset
            value: !lambda "return 475 - (((2500-id(ads1115_a0).state)/1,037));"

  - platform: template
    name: "Reset calibration"
    on_press:
      then:
        - globals.set: 
            id: redox_offset
            value: '0.0'

  - platform: restart
    name: Reboot

status_led:
  pin:
    number: GPIO2
    inverted: yes